<% // This EJS template will be processed by Gulp with values taken from WebsiteInstances.json -%>
<?php

// This file is generated by a gulp task from WebsiteInstances.ejs and WebsiteInstances.json. Do not directly modify!

namespace Api\Library\Shared;

use Api\Model\Shared\Rights\SiteRoles;

class WebsiteInstances
{

    /**
     * This function contains the site "definitions" for Scripture Forge sites
     * @return array
     */
    public static function getScriptureForgeSites()
    {
        $sites = array();

        /*
         * **************************
         * SCRIPTURE FORGE WEBSITES
         * **************************
         */

<% for (var i = 0; i < scriptureforge.length; ++i) {
        host = scriptureforge[i];
        if (host.__comment) { %>
        // <%- host.__comment %><% } %>
        $w = new Website('<%- host.domain %>', <%- host.base %>);
        $w->name = '<%- host.name %>';
        $w->ssl = <%- host.ssl %>;
        <%_ if (host.theme) { -%>
        $w->theme = '<%- host.theme %>';
        <%_ } -%>
        <%_ if (host.userDefaultSiteRole) { -%>
        $w->userDefaultSiteRole = <%- host.userDefaultSiteRole %>;
        <%_ } -%>
        <%_ if (host.defaultProjectCode) { -%>
        $w->defaultProjectCode = '<%- host.defaultProjectCode %>';
        <%_ } -%>
        <%_ if (host.isProduction) { -%>
        $w->isProduction = <%- host.isProduction %>;
        <%_ } -%>
        $w->releaseStage = '<%- host.releaseStage %>';
        $sites['<%- host.domain %>'] = $w;
<% };%>

        return $sites;
    }


    /**
     * This function contains the site "definitions" for Language Forge sites
     * @return array
     */
    public static function getLanguageForgeSites()
    {
        $sites = array();


        /*
         * **************************
         * LANGUAGE FORGE WEBSITES
         * **************************
         */

<% for (var i = 0; i < languageforge.length; ++i) {
        host = languageforge[i];
        if (host.__comment) { %>
        // <%- host.__comment %><% } %>
        $w = new Website('<%- host.domain %>', <%- host.base %>);
        $w->name = '<%- host.name %>';
        $w->ssl = <%- host.ssl %>;
        <%_ if (host.userDefaultSiteRole) { -%>
        $w->userDefaultSiteRole = <%- host.userDefaultSiteRole %>;
        <%_ } -%>
        <%_ if (host.theme) { -%>
        $w->theme = '<%- host.theme %>';
        <%_ } -%>
        <%_ if (host.defaultProjectCode) { -%>
        $w->defaultProjectCode = '<%- host.defaultProjectCode %>';
        <%_ } -%>
        <%_ if (host.isProduction) { -%>
        $w->isProduction = <%- host.isProduction %>;
        <%_ } -%>
        $w->releaseStage = '<%- host.releaseStage %>';
        $sites['<%- host.domain %>'] = $w;
<% }; %>

        return $sites;
    }


    /**
     * @return array
     */
    public static function getRedirects() {

        $redirects = array();

        $redirects['www.scriptureforge.org'] = 'scriptureforge.org';
        $redirects['www.languageforge.org'] = 'languageforge.org';
        $redirects['www.jamaicanpsalms.com'] = 'jamaicanpsalms.scriptureforge.org';
        $redirects['www.jamaicanpsalms.org'] = 'jamaicanpsalms.scriptureforge.org';
        $redirects['jamaicanpsalms.org'] = 'jamaicanpsalms.scriptureforge.org';
        $redirects['jamaicanpsalms.com'] = 'jamaicanpsalms.scriptureforge.org';

        return $redirects;
    }

}
