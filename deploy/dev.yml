---

- name: Deploy development environment for xForge (languageforge.org and scriptureforge.org)
  hosts: all
  sudo: yes
  vars:
    # local path
    mongo_path: /hddlinux/mongodb
    # VM (Vagrant) path
#    mongo_path: /var/lib/mongodb
  roles:
    - ssl_config
    - apache_config
  tasks:
    - name: install packages
      apt: name="{{item}}" state=present
      with_items:
        - libapache2-mod-php5
        - php5-gd
        - php5-dev
        - php5-cli
        - php-pear
        - mongodb-server
        - unzip
        - p7zip-full

    - name: php.ini changes
      lineinfile:
        dest: /etc/php5/apache2/php.ini
        regexp: "^;?{{item.property}}"
        line: "{{item.property}} = {{item.value}}"
        backrefs: yes
      with_items:
        - property: 'memory_limit'
          value: '256M'
        - property: 'display_errors'
          value: 'On'
        - property: 'display_startup_errors'
          value: 'On'
        - property: 'error_log'
          value: '/var/log/php/php_error.log'
        - property: 'post_max_size'
          value: '60M'
        - property: 'upload_max_filesize'
          value: '60M'
      notify:
        - Restart apache

    - name: Ensure default_local folder does not exist (localhost)
      file: path="/var/www/virtual/default_local" state=absent force=true
      when: inventory_hostname == "localhost"
    - name: Get local dir (localhost)
      local_action: shell pwd
      register: local_dir
      when: inventory_hostname == "localhost"
    - name: Ensure default_local link exists (localhost)
      file: src="{{local_dir.stdout | dirname | realpath}}" dest="/var/www/virtual/default_local" state=link force=true
      when: inventory_hostname == "localhost"

    - name: install PECL mongo extension
      # yes types empty line over and over to accept defaults
      shell: yes '' | /usr/bin/pecl install mongo-1.4.1
      register: pecl_result
      changed_when: "pecl_result.rc == 0"
      failed_when: "not (('already installed' in pecl_result.stdout) or ('install ok:' in pecl_result.stdout))"
    - name: install PECL mongo extension | enable module in mods-available
      lineinfile:
        dest: /etc/php5/mods-available/mongo.ini
        state: present
        create: yes
        regexp: 'mongo.so'
        line: 'extension=mongo.so'
    - name: install PECL mongo extension | ensure conf.d exists
      file: path=/etc/php5/conf.d state=directory mode=0755
    - name: install PECL mongo extension | link exists
      shell: test -f /etc/php5/conf.d/*0-mongo.ini
      register: mongo_confd_link
      changed_when: False
      failed_when: False
    - name: install PECL mongo extension | count conf.d
      shell: ls /etc/php5/conf.d | wc -l
      register: php5_confd_n
      when: mongo_confd_link.rc != 0
    - name: install PECL mongo extension | add mods-available in conf.d
      file: src=/etc/php5/mods-available/mongo.ini dest=/etc/php5/conf.d/{{php5_confd_n.stdout | int + 1}}0-mongo.ini state=link
      when: mongo_confd_link.rc != 0
      notify:
        - Restart apache
    - name: update the mongo config file
      lineinfile:
        dest: /etc/mongodb.conf
        regexp: '^(dbpath=).*$'
        line: '\1{{mongo_path}}'
        backrefs: yes
      notify:
        - restart mongodb
    - name: ensure mongodb is running (and enable it at boot)
      service: name=mongodb state=started enabled=yes
    - meta: flush_handlers
    - name: factory reset mongodb to empty with admin user
      shell: php /var/www/virtual/default_local/tools/factoryReset.php run

    - name: Ensure codeigniter lib link exists
      file: src="/var/www/virtual/default_local/lib" dest="/var/www/virtual/{{item}}/lib" state=link force=true
      notify: Restart apache
      with_items:
        - "languageforge.org"
        - "scriptureforge.org"

    - name: add host aliases
      lineinfile:
        dest: /etc/hosts
        regexp: "{{item}}"
        line: "127.0.0.1    {{item}}"
      with_items:
        - "default.local"
        - "languageforge.local"
        - "scriptureforge.local"

  handlers:
    - name: restart mongodb
      service: name=mongodb state=restarted
