# https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
apiVersion: v1
kind: Service
metadata:
  labels:
    app: db
  name: db
spec:
  type: ClusterIP
  clusterIP: None
  selector:
    app: db

---

# https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: lf-mongo-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
# https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/
apiVersion: batch/v1
kind: CronJob
metadata:
  name: lf-mongo-data-snapshot-runner
spec:
  schedule: "@weekly" # https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/#cron-schedule-syntax
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: snapshot-runner
            image: docker.dallas.languagetechnology.org/ba-kb-snapshot
            command:
            - /bin/sh
            - -c
            - |- 
              cat <<EOF | kubectl apply -f - 
              apiVersion: snapshot.storage.k8s.io/v1
              kind: VolumeSnapshot
              metadata:
                name: lf-mongo-data-snapshot
              spec:
                volumeSnapshotClassName: csi-longhorn-snap
                source:
                  persistentVolumeClaimName: lf-mongo-data
              EOF

---

# https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#writing-a-deployment-spec
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: db
  name: db
spec:
  selector:
    matchLabels:
      app: db
  template:
    # https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: mongo:4.0
        volumeMounts:
        - mountPath: /data/db
          name: data
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: lf-mongo-data
